import{_ as e,o as t,c as a,d as o}from"./app.f62dc975.js";const i={},r=o('<h1 id="team-member-approvals-criteria" tabindex="-1"><a class="header-anchor" href="#team-member-approvals-criteria" aria-hidden="true">#</a> Team Member Approvals Criteria</h1><p>When someone books a team member ticket through Solidrock, in most cases, they are applying to join one or more selected teams. At this point they are in a &#39;Pending&#39; state. Organisations are then required to review the team member application and make a decision about whether the applicant seems a good fit for the role or team they are applying to and then to approve or decline the application, or to move the applicant to a more appropriate team.</p><p>In order to make the best decision and in some cases for legal reasons there are often multiple steps an application must go through before it can reach an &#39;accepted&#39; state. This is where Team Member Approval Criteria comes into play. Here you can set any number of steps or criteria that must be completed for an application to be completed.</p><p>Some common examples of steps include:</p><ul><li>DBS <ul><li>DBS Number Received</li><li>DBS Checked</li><li>DBS Approved</li></ul></li><li>Reference <ul><li>Requested</li><li>Received</li><li>Reference Approved</li></ul></li><li>Parental Content <ul><li>Consent Form Sent</li><li>Consent Received</li></ul></li></ul><p>With these set, when viewing a team member ticket in the backend you will be shown this list as a set of checkboxes ready to be ticked off as and when the criteria are met. Once all are complete, you may then approve an applicant onto a team.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Approval criteria are completely optional. If your event team members don&#39;t need to go through any approval steps this can be left completely empty allowing you to approve a team member immediately.</p></div>',7),l=[r];function n(p,s){return t(),a("div",null,l)}var m=e(i,[["render",n],["__file","approval.html.vue"]]);export{m as default};
